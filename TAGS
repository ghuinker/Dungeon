
data.c,109
FILE *f;f7,79
void loadDungeon(11,91
void saveDungeon(24,343
int returnAction(38,601
int readIn(49,790

data.h,1033
# define DATA_H2,15
#define DUNGEON_X 11,97
#define DUNGEON_Y 12,131
#define MIN_ROOMS 13,165
#define MAX_ROOMS 14,198
#define ROOM_MIN_X 15,231
#define ROOM_MIN_Y 16,264
#define ROOM_MAX_X 17,297
#define ROOM_MAX_Y 18,331
  typedef enum dim 22,367
    dim_x,23,388
    dim_y,24,399
    num_dims25,410
  } dim_t;26,423
  typedef int16_t pair_t[pair_t28,435
  typedef enum __attribute__ ((__packed__)) terrain_type terrain_type_t;33,524
typedef enum __attribute__ ((__packed__)) terrain_type 35,598
  ter_debug,36,655
  ter_wall,37,668
  ter_wall_immutable,38,680
  ter_floor,39,702
  ter_floor_room,40,715
  ter_floor_hall,41,733
} terrain_type_t;42,751
  typedef struct room room_t;45,785
typedef struct room 47,816
  pair_t position;48,838
  pair_t size;49,857
} room_t;50,872
  typedef struct dungeon dungeon_t;54,902
typedef struct dungeon 56,939
  uint32_t num_rooms;57,964
  room_t rooms[rooms58,986
  terrain_type_t map[map59,1013
  uint8_t hardness[hardness68,1666
} dungeon_t;69,1708

heap.c,1009
#undef min4,39
struct heap_node 6,51
  heap_node_t *next;next7,70
  heap_node_t *prev;prev8,91
  heap_node_t *parent;parent9,112
  heap_node_t *child;child10,135
  void *datum;datum11,157
  uint32_t degree;12,172
  uint32_t mark;13,191
#define splice_heap_node_lists(16,212
#define insert_heap_node_in_list(25,524
#define remove_heap_node_from_list(32,748
void print_heap_node(37,881
void print_heap(53,1203
void print_heap_node_list(70,1505
void heap_init(86,1704
void heap_node_delete(96,1940
void heap_delete(114,2244
heap_node_t *heap_insert(heap_insert125,2409
void *heap_peek_min(heap_peek_min145,2725
static void heap_link(150,2801
static void heap_consolidate(164,3123
void *heap_remove_min(heap_remove_min205,4056
int heap_combine(240,4590
static void heap_cut(269,5241
static void heap_cascading_cut(283,5522
int heap_decrease_key(297,5748
int heap_decrease_key_no_replace(311,5990
int32_t compare(335,6564
char *print_int(print_int340,6663
int main(349,6781

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

macros.h,611
# define MACROS_H2,17
#  define dprintf(16,213
#  define dfprintf(17,256
#  define dprintf(19,320
#  define dfprintf(20,343
# define fieldwidth(23,382
# define exit(37,1201
# define fopen(42,1441
#  define malloc(76,3348
#  define calloc(92,4430
#  define strdup(107,5435
#  define free(117,6055
# define swap(125,6303
# define memswap(131,6415
# define structdup(137,6543
# define datacmp(144,6927
# define max2(153,7400
# define min2(160,7576
# define max 167,7752
# define min 168,7770
# define max3(170,7789
# define min3(171,7830
# define frand(173,7872
# define structdup(180,7984

rlg327.c,1448
# define rand_under(18,370
# define rand_range(22,513
# define UNUSED(23,586
typedef struct corridor_path 25,617
  heap_node_t *hn;hn26,648
  uint8_t pos[pos27,667
  uint8_t from[from28,685
  int32_t cost;29,704
} corridor_path_t;30,720
typedef int16_t pair_t[pair_t33,741
#define DUNGEON_X 35,776
#define DUNGEON_Y 36,810
#define MIN_ROOMS 37,844
#define MAX_ROOMS 38,877
#define ROOM_MIN_X 39,910
#define ROOM_MIN_Y 40,943
#define ROOM_MAX_X 41,976
#define ROOM_MAX_Y 42,1010
#define mappair(44,1044
#define mapxy(45,1101
#define hardnesspair(46,1136
#define hardnessxy(47,1203
static uint32_t in_room(50,1250
static uint32_t adjacent_to_room(66,1641
static uint32_t is_open_space(74,1902
static int32_t corridor_path_cmp(79,2001
static void dijkstra_corridor(83,2151
static void dijkstra_corridor_inv(182,5888
#define hardnesspair_inv(235,7210
static int connect_two_rooms(285,9881
static int create_cycle(304,10533
static int connect_rooms(346,12098
int gaussian[gaussian359,12291
typedef struct queue_node 367,12447
  int x,368,12475
  int x, y;368,12475
  struct queue_node *next;next369,12487
} queue_node_t;370,12514
static int smooth_hardness(372,12531
static int empty_dungeon(526,16705
static int place_rooms(545,17081
static int make_rooms(582,18268
int gen_dungeon(606,18816
void render_dungeon(618,18959
void delete_dungeon(646,19566
void init_dungeon(650,19605
int main(655,19662
