
heap.c,1009
#undef min4,39
struct heap_node 6,51
  heap_node_t *next;next7,70
  heap_node_t *prev;prev8,91
  heap_node_t *parent;parent9,112
  heap_node_t *child;child10,135
  void *datum;datum11,157
  uint32_t degree;12,172
  uint32_t mark;13,191
#define splice_heap_node_lists(16,212
#define insert_heap_node_in_list(25,524
#define remove_heap_node_from_list(32,748
void print_heap_node(37,881
void print_heap(53,1203
void print_heap_node_list(70,1505
void heap_init(86,1704
void heap_node_delete(96,1940
void heap_delete(114,2244
heap_node_t *heap_insert(heap_insert125,2409
void *heap_peek_min(heap_peek_min145,2725
static void heap_link(150,2801
static void heap_consolidate(164,3123
void *heap_remove_min(heap_remove_min205,4056
int heap_combine(240,4590
static void heap_cut(269,5241
static void heap_cascading_cut(283,5522
int heap_decrease_key(297,5748
int heap_decrease_key_no_replace(311,5990
int32_t compare(335,6564
char *print_int(print_int340,6663
int main(349,6781

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

macros.h,611
# define MACROS_H2,17
#  define dprintf(16,213
#  define dfprintf(17,256
#  define dprintf(19,320
#  define dfprintf(20,343
# define fieldwidth(23,382
# define exit(37,1201
# define fopen(42,1441
#  define malloc(76,3348
#  define calloc(92,4430
#  define strdup(107,5435
#  define free(117,6055
# define swap(125,6303
# define memswap(131,6415
# define structdup(137,6543
# define datacmp(144,6927
# define max2(153,7400
# define min2(160,7576
# define max 167,7752
# define min 168,7770
# define max3(170,7789
# define min3(171,7830
# define frand(173,7872
# define structdup(180,7984

path.h,21
# define PATH_H2,15

rlg327.c,2590
#define DUMP_HARDNESS_IMAGES 17,276
# define rand_under(21,421
# define rand_range(25,564
# define UNUSED(26,637
typedef struct corridor_path 28,668
  heap_node_t *hn;hn29,699
  uint8_t pos[pos30,718
  uint8_t from[from31,736
  int32_t cost;32,755
} corridor_path_t;33,771
typedef enum dim 35,791
  dim_x,36,810
  dim_y,37,819
  num_dims38,828
} dim_t;39,839
typedef int16_t pair_t[pair_t41,849
#define DUNGEON_X 43,884
#define DUNGEON_Y 44,918
#define MIN_ROOMS 45,952
#define MAX_ROOMS 46,985
#define ROOM_MIN_X 47,1018
#define ROOM_MIN_Y 48,1051
#define ROOM_MAX_X 49,1084
#define ROOM_MAX_Y 50,1118
#define SAVE_DIR 51,1151
#define DUNGEON_SAVE_FILE 52,1192
#define DUNGEON_SAVE_SEMANTIC 53,1233
#define DUNGEON_SAVE_VERSION 54,1279
#define mappair(56,1314
#define mapxy(57,1371
#define hardnesspair(58,1406
#define hardnessxy(59,1473
typedef enum __attribute__ ((__packed__)) terrain_type 61,1519
  ter_debug,62,1576
  ter_wall,63,1589
  ter_wall_immutable,64,1601
  ter_floor,65,1623
  ter_floor_room,66,1636
  ter_floor_hall,67,1654
} terrain_type_t;68,1672
typedef struct room 70,1691
  pair_t position;71,1713
  pair_t size;72,1732
} room_t;73,1747
typedef struct dungeon 75,1758
  uint32_t num_rooms;76,1783
  room_t *rooms;rooms77,1805
  terrain_type_t map[map78,1822
  uint8_t hardness[hardness87,2475
  pair_t pc;88,2517
} dungeon_t;89,2530
static uint32_t in_room(91,2544
static uint32_t adjacent_to_room(107,2935
static uint32_t is_open_space(115,3196
static int32_t corridor_path_cmp(120,3295
static void dijkstra_corridor(124,3445
static void dijkstra_corridor_inv(223,7182
#define hardnesspair_inv(276,8504
static int connect_two_rooms(326,11175
static int create_cycle(345,11827
static int connect_rooms(387,13392
int gaussian[gaussian400,13585
typedef struct queue_node 408,13741
  int x,409,13769
  int x, y;409,13769
  struct queue_node *next;next410,13781
} queue_node_t;411,13808
static int smooth_hardness(413,13825
static int empty_dungeon(572,18094
static int place_rooms(591,18470
static int make_rooms(628,19657
int gen_dungeon(651,20218
void render_dungeon(663,20361
void delete_dungeon(696,21023
void init_dungeon(701,21080
int write_dungeon_map(706,21137
int write_rooms(719,21366
uint32_t calculate_dungeon_size(739,21785
int makedirectory(746,22032
int write_dungeon(781,22668
int read_dungeon_map(844,24163
int read_rooms(867,24761
int calculate_num_rooms(921,26578
int read_dungeon(929,26818
int read_pgm(1008,28702
void usage(1093,31105
int main(1103,31315

path.c,0
