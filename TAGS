
heap.c,1009
#undef min4,39
struct heap_node 6,51
  heap_node_t *next;next7,70
  heap_node_t *prev;prev8,91
  heap_node_t *parent;parent9,112
  heap_node_t *child;child10,135
  void *datum;datum11,157
  uint32_t degree;12,172
  uint32_t mark;13,191
#define splice_heap_node_lists(16,212
#define insert_heap_node_in_list(25,524
#define remove_heap_node_from_list(32,748
void print_heap_node(37,881
void print_heap(53,1203
void print_heap_node_list(70,1505
void heap_init(86,1704
void heap_node_delete(96,1940
void heap_delete(114,2244
heap_node_t *heap_insert(heap_insert125,2409
void *heap_peek_min(heap_peek_min145,2725
static void heap_link(150,2801
static void heap_consolidate(164,3123
void *heap_remove_min(heap_remove_min205,4056
int heap_combine(240,4590
static void heap_cut(269,5241
static void heap_cascading_cut(283,5522
int heap_decrease_key(297,5748
int heap_decrease_key_no_replace(311,5990
int32_t compare(335,6564
char *print_int(print_int340,6663
int main(349,6781

character.cpp,531
void character_delete(9,117
int16_t *character_get_pos(character_get_pos14,170
int16_t character_get_y(19,238
int16_t character_set_y(24,316
int16_t character_get_x(29,403
int16_t character_set_x(34,481
void character_die(39,568
int character_is_alive(44,622
char character_get_symbol(49,689
uint32_t character_get_speed(54,760
uint32_t character_get_dkills(59,833
uint32_t character_get_ikills(64,920
uint32_t character_increment_dkills(69,1008
uint32_t character_increment_ikills(74,1097
uint32_t can_see(79,1202

descriptions.cpp,2799
#define MONSTER_FILE_SEMANTIC 19,317
#define MONSTER_FILE_VERSION 20,385
#define NUM_MONSTER_DESCRIPTION_FIELDS 21,427
#define OBJECT_FILE_SEMANTIC 22,468
#define OBJECT_FILE_VERSION 23,535
#define NUM_OBJECT_DESCRIPTION_FIELDS 24,577
  const char *name;name27,642
  const uint32_t value;28,662
} abilities_lookup[abilities_lookup29,686
#define color_lu_entry(50,1586
  const char *name;name52,1664
  const uint32_t value;53,1684
} colors_lookup[colors_lookup54,1708
#define type_lu_entry(70,2195
  const char *name;name72,2271
  const object_type_t value;73,2291
} types_lookup[types_lookup74,2320
static inline void eat_whitespace(120,3435
static inline void eat_blankspace(127,3539
static uint32_t parse_name(134,3643
static uint32_t parse_monster_name(158,4352
static uint32_t parse_monster_symb(165,4564
static uint32_t parse_integer(187,4913
static uint32_t parse_monster_rrty(208,5263
static uint32_t parse_color(215,5479
static uint32_t parse_monster_color(252,6054
static uint32_t parse_desc(291,6711
static uint32_t parse_monster_desc(332,7446
typedef uint32_t (*dice_parser_func_t)dice_parser_func_t339,7658
static uint32_t parse_dice(343,7830
static dice_parser_func_t parse_monster_speed 369,8257
static dice_parser_func_t parse_monster_dam 370,8317
static dice_parser_func_t parse_monster_hp 371,8375
static uint32_t parse_monster_abil(373,8433
static uint32_t parse_monster_description(410,9114
static uint32_t parse_object_name(545,13936
static uint32_t parse_object_art(553,14146
static uint32_t parse_object_rrty(572,14536
static uint32_t parse_object_desc(579,14749
static uint32_t parse_object_type(586,14958
static uint32_t parse_object_color(623,15559
static dice_parser_func_t parse_object_hit 630,15771
static dice_parser_func_t parse_object_dam 631,15828
static dice_parser_func_t parse_object_dodge 632,15885
static dice_parser_func_t parse_object_def 633,15944
static dice_parser_func_t parse_object_weight 634,16001
static dice_parser_func_t parse_object_speed 635,16061
static dice_parser_func_t parse_object_attr 636,16120
static dice_parser_func_t parse_object_val 637,16178
static uint32_t parse_object_description(639,16236
static uint32_t parse_monster_descriptions(819,23003
static uint32_t parse_object_descriptions(849,23807
uint32_t parse_descriptions(879,24603
uint32_t print_descriptions(918,25272
void monster_description::set(set937,25730
std::ostream &monster_description::print(print958,26463
std::ostream &operator<<(operator<<992,27340
uint32_t destroy_descriptions(997,27432
void object_description::set(set1005,27563
std::ostream &object_description::print(print1036,28617
std::ostream &operator<<(operator<<1061,29331
void init_monster(1067,29425
void init_items(1080,29814

dice.cpp,114
int32_t dice::roll(roll6,58
std::ostream &dice::print(print22,257
std::ostream &operator<<(operator<<27,358

dungeon.cpp,1379
#define DUMP_HARDNESS_IMAGES 17,270
typedef struct corridor_path 19,302
  heap_node_t *hn;hn20,333
  uint8_t pos[pos21,352
  uint8_t from[from22,370
  int32_t cost;23,389
} corridor_path_t;24,405
static uint32_t adjacent_to_room(26,425
static uint32_t is_open_space(34,684
static int32_t corridor_path_cmp(39,781
static void dijkstra_corridor(43,931
static void dijkstra_corridor_inv(142,4683
#define hardnesspair_inv(195,6020
static int connect_two_rooms(245,8691
static int create_cycle(264,9341
static int connect_rooms(306,10905
int gaussian[gaussian319,11096
typedef struct queue_node 327,11252
  int x,328,11280
  int x, y;328,11280
  struct queue_node *next;next329,11292
} queue_node_t;330,11319
static int smooth_hardness(332,11336
static int empty_dungeon(491,15773
static int place_rooms(513,16192
static void place_stairs(550,17377
static int make_rooms(572,18004
int gen_dungeon(595,18574
void delete_dungeon(608,18734
void init_dungeon(615,18874
int write_dungeon_map(622,19029
int write_rooms(635,19256
uint32_t calculate_dungeon_size(655,19673
int write_dungeon(662,19918
int read_dungeon_map(728,21480
int read_rooms(751,22076
int calculate_num_rooms(805,23882
int read_dungeon(813,24122
int read_pgm(895,26088
void render_hardness_map(980,28500
void render_movement_cost_map(1003,29021
void new_dungeon(1025,29526

event.cpp,174
static uint32_t next_event_number(4,43
int32_t compare_events(14,369
event *new_event(new_event25,681
event *update_event(update_event42,973
void event_delete(50,1115

io.cpp,1039
static dungeon *thedungeon;thedungeon14,228
typedef struct io_message 16,257
  char msg[msg19,438
  struct io_message *next;next20,454
} io_message_t;21,481
static io_message_t *io_head,io_head23,498
static io_message_t *io_head, *io_tail;io_tail23,498
void io_init_terminal(25,539
void io_reset_terminal(42,1024
void io_queue_message(54,1184
static void io_print_message_queue(80,1591
void io_display_tunnel(100,2067
void io_display_distance(118,2475
static char hardness_to_char[hardness_to_char136,2876
void io_display_hardness(139,2978
static int compare_monster_distance(159,3807
static character *io_nearest_visible_monster(io_nearest_visible_monster170,4241
void io_display(202,4977
void io_display_no_fog(294,7720
void io_display_monster_list(362,9771
uint32_t io_teleport_pc(371,9967
static const char *adjectives[adjectives523,13089
static void io_scroll_monster_list(556,13871
static void io_list_monsters_display(585,14325
static void io_list_monsters(634,16003
void io_handle_input(664,16768

move.cpp,237
void do_combat(18,266
void move_character(104,3364
void do_moves(125,3940
void dir_nearest_wall(191,5967
uint32_t against_wall(203,6378
uint32_t in_corner(215,6862
static void new_dungeon_level(233,7486
uint32_t move_pc(249,7776

npc.cpp,1056
static uint32_t max_monster_cells(13,199
void gen_monsters(27,444
void npc_next_pos_rand_tunnel(79,1960
    uint32_t i;83,2047
    uint8_t a[a84,2063
void npc_next_pos_rand(124,2809
    uint32_t i;128,2889
    uint8_t a[a129,2905
void npc_next_pos_line_of_sight(156,3364
void npc_next_pos_line_of_sight_tunnel(180,4056
void npc_next_pos_gradient(215,4867
static void npc_next_pos_00(338,9544
static void npc_next_pos_01(350,9966
static void npc_next_pos_02(368,10591
static void npc_next_pos_03(376,10883
static void npc_next_pos_04(382,11048
static void npc_next_pos_05(394,11477
static void npc_next_pos_06(412,12109
static void npc_next_pos_07(420,12408
static void npc_next_pos_08(426,12573
static void npc_next_pos_09(436,12804
static void npc_next_pos_0a(446,13035
static void npc_next_pos_0b(456,13266
static void npc_next_pos_0c(466,13497
static void npc_next_pos_0d(476,13735
static void npc_next_pos_0e(486,13973
static void npc_next_pos_0f(496,14211
void npc_next_pos(529,15091
uint32_t dungeon_has_npcs(537,15282

path.cpp,306
static dungeon *thedungeon;thedungeon13,649
typedef struct path 15,678
  heap_node_t *hn;hn16,700
  uint8_t pos[pos17,719
} path_t;18,737
static int32_t dist_cmp(20,748
static int32_t tunnel_cmp(27,1114
void dijkstra(34,1472
#define tunnel_movement_cost(144,5978
void dijkstra_tunnel(147,6070

pc.cpp,347
uint32_t pc_is_alive(12,151
void place_pc(17,212
void config_pc(30,704
uint32_t pc_next_pos(50,1086
uint32_t pc_in_room(148,5145
void pc_learn_terrain(163,5694
void pc_reset_visibility(169,5850
terrain_type pc_learned_terrain(180,6017
void pc_init_known_terrain(189,6254
void pc_observe_terrain(201,6467
int32_t is_illuminated(238,7472

rlg327.cpp,115
const char *victory victory15,230
const char *tombstone tombstone46,1801
void usage(67,2852
int main(78,3106

utils.cpp,25
int makedirectory(9,124

character.h,332
# define CHARACTER_H2,20
typedef enum kill_type 8,84
  kill_direct,9,109
  kill_avenged,10,124
  num_kill_types11,140
} kill_type_t;12,157
class character 14,173
  char symbol;16,200
  pair_t position;17,215
  int32_t speed;18,234
  uint32_t alive;19,251
  uint32_t sequence_number;27,816
  uint32_t kills[kills28,844

descriptions.h,2270
# define DESCRIPTIONS_H2,23
# undef swap5,69
typedef struct dungeon dungeon_t;11,158
typedef enum object_type 20,398
  objtype_no_type,21,425
  objtype_WEAPON,22,444
  objtype_OFFHAND,23,462
  objtype_RANGED,24,481
  objtype_LIGHT,25,499
  objtype_ARMOR,26,516
  objtype_HELMET,27,533
  objtype_CLOAK,28,551
  objtype_GLOVES,29,568
  objtype_BOOTS,30,586
  objtype_AMULET,31,603
  objtype_RING,32,621
  objtype_SCROLL,33,637
  objtype_BOOK,34,655
  objtype_FLASK,35,671
  objtype_GOLD,36,688
  objtype_AMMUNITION,37,704
  objtype_FOOD,38,726
  objtype_WAND,39,742
  objtype_CONTAINER40,758
} object_type_t;41,778
class monster_description 45,832
  std::string name,47,868
  std::string name, description;47,868
  char symbol;48,901
  std::vector<uint32_t> color;49,916
  uint32_t abilities;50,947
  dice speed,51,969
  dice speed, hitpoints,51,969
  dice speed, hitpoints, damage;51,969
  uint32_t rarity;52,1002
  monster_description(54,1030
  char get_symbol(69,1593
class object_description 72,1636
  std::string name,74,1671
  std::string name, description;74,1671
  object_type_t type;75,1704
  uint32_t color;76,1726
  dice hit,77,1744
  dice hit, damage,77,1744
  dice hit, damage, dodge,77,1744
  dice hit, damage, dodge, defence,77,1744
  dice hit, damage, dodge, defence, weight,77,1744
  dice hit, damage, dodge, defence, weight, speed,77,1744
  dice hit, damage, dodge, defence, weight, speed, attribute,77,1744
  dice hit, damage, dodge, defence, weight, speed, attribute, value;77,1744
  bool artifact;78,1813
  uint32_t rarity;79,1830
  object_description(81,1858
  inline const std::string &get_name(get_name105,2799
  inline const std::string &get_description(get_description106,2861
  inline const object_type_t get_type(107,2937
  inline const uint32_t get_color(108,3000
  inline const dice &get_hit(get_hit109,3060
  inline const dice &get_damage(get_damage110,3113
  inline const dice &get_dodge(get_dodge111,3172
  inline const dice &get_defence(get_defence112,3229
  inline const dice &get_weight(get_weight113,3290
  inline const dice &get_speed(get_speed114,3349
  inline const dice &get_attribute(get_attribute115,3406
  inline const dice &get_value(get_value116,3471

dice.h,375
# define DICE_H2,15
class dice 7,75
  int32_t base;9,98
  uint32_t number,10,114
  uint32_t number, sides;10,114
  dice(12,149
  dice(15,197
  inline void set(19,304
  inline void set_base(25,452
  inline void set_number(29,520
  inline void set_sides(33,597
  inline int32_t get_base(39,738
  inline int32_t get_number(43,797
  inline int32_t get_sides(47,860

dims.h,147
# define DIMS_H2,15
typedef enum dim 7,190
  dim_x,8,209
  dim_y,9,218
  num_dims10,227
} dim_t;11,238
typedef int16_t pair_t[pair_t13,248

dungeon.h,2403
# define DUNGEON_H2,18
#define DUNGEON_X 10,149
#define DUNGEON_Y 11,183
#define MIN_ROOMS 12,217
#define MAX_ROOMS 13,250
#define ROOM_MIN_X 14,283
#define ROOM_MIN_Y 15,316
#define ROOM_MAX_X 16,349
#define ROOM_MAX_Y 17,383
#define PC_VISUAL_RANGE 18,416
#define NPC_VISUAL_RANGE 19,449
#define PC_SPEED 20,483
#define MAX_MONSTERS 21,517
#define SAVE_DIR 22,551
#define DUNGEON_SAVE_FILE 23,592
#define DUNGEON_SAVE_SEMANTIC 24,633
#define DUNGEON_SAVE_VERSION 25,679
#define MONSTER_DESC_FILE 26,713
#define OBJECT_DESC_FILE 27,763
#define mappair(29,813
#define mapxy(30,870
#define hardnesspair(31,905
#define hardnessxy(32,972
#define charpair(33,1017
#define charxy(34,1085
enum __attribute__ ((__packed__)) terrain_type 36,1132
  ter_debug,37,1181
  ter_unknown,38,1194
  ter_wall,39,1209
  ter_wall_immutable,40,1221
  ter_floor,41,1243
  ter_floor_room,42,1256
  ter_floor_hall,43,1274
  ter_stairs,44,1292
  ter_stairs_up,45,1306
  ter_stairs_down46,1323
typedef struct room 49,1345
  pair_t position;50,1367
  pair_t size;51,1386
} room_t;52,1401
class item{item56,1423
  std::string name,58,1443
  std::string name, description;58,1443
  object_type_t type;59,1476
  uint32_t color;60,1498
  uint32_t hit,61,1516
  uint32_t hit, damage,61,1516
  uint32_t hit, damage, dodge,61,1516
  uint32_t hit, damage, dodge, defence,61,1516
  uint32_t hit, damage, dodge, defence, weight,61,1516
  uint32_t hit, damage, dodge, defence, weight, speed,61,1516
  uint32_t hit, damage, dodge, defence, weight, speed, attribute,61,1516
  uint32_t hit, damage, dodge, defence, weight, speed, attribute, value;61,1516
  bool artifact;62,1589
  uint32_t rarity;63,1606
class dungeon 66,1629
  uint32_t num_rooms;68,1654
  room_t *rooms;rooms69,1676
  terrain_type map[map70,1693
  uint8_t hardness[hardness79,2344
  uint8_t pc_distance[pc_distance80,2386
  uint8_t pc_tunnel[pc_tunnel81,2431
  character *character_map[character_map82,2474
  item *item_map[item_map83,2524
  pc *PC;PC84,2564
  heap_t events;85,2574
  uint16_t num_monsters;86,2591
  uint16_t max_monsters;87,2616
  uint32_t character_sequence_number;88,2641
  uint32_t time;94,3065
  uint32_t is_new;95,3082
  uint32_t quit;96,3101
  std::vector<monster_description> monster_descriptions;97,3118
  std::vector<object_description> object_descriptions;98,3175

event.h,225
# define EVENT_H2,16
typedef enum eventype 8,79
  event_characterurn,9,103
} eventype_t;10,125
struct event 12,140
  eventype_t type;13,155
  uint32_t time;14,174
  uint32_t sequence;15,191
    character *c;c17,222

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

io.h,19
# define IO_H2,13

macros.h,615
# define MACROS_H2,17
#  define dprintf(16,213
#  define dfprintf(17,256
#  define dprintf(19,320
#  define dfprintf(20,343
# define fieldwidth(23,382
# define exit(37,1201
# define fopen(42,1441
#  define malloc(76,3348
#  define calloc(92,4430
#  define strdup(107,5435
#  define free(117,6055
# define swap(125,6303
# define memswap(131,6415
# define structdup(137,6543
# define datacmp(144,6927
# define max2(153,7400
# define min2(160,7576
# define max_f 167,7752
# define min_f 168,7772
# define max3(170,7793
# define min3(171,7834
# define frand(173,7876
# define structdup(180,7988

move.h,21
# define MOVE_H2,15

npc.h,1390
# define NPC_H2,14
# define NPC_SMART 12,153
# define NPC_TELEPATH 13,191
# define NPC_TUNNEL 14,229
# define NPC_ERRATIC 15,267
# define NPC_PASS_WALL 16,305
# define NPC_DESTROY_OBJ 17,343
# define NPC_PICKUP_OBJ 18,381
# define NPC_UNIQ 19,419
# define NPC_BOSS 20,457
# define NPC_BIT09 21,495
# define NPC_BIT10 22,533
# define NPC_BIT11 23,571
# define NPC_BIT12 24,609
# define NPC_BIT13 25,647
# define NPC_BIT14 26,685
# define NPC_BIT15 27,723
# define NPC_BIT16 28,761
# define NPC_BIT17 29,799
# define NPC_BIT18 30,837
# define NPC_BIT19 31,875
# define NPC_BIT20 32,913
# define NPC_BIT21 33,951
# define NPC_BIT22 34,989
# define NPC_BIT23 35,1027
# define NPC_BIT24 36,1065
# define NPC_BIT25 37,1103
# define NPC_BIT26 38,1141
# define NPC_BIT27 39,1179
# define NPC_BIT28 40,1217
# define NPC_BIT29 41,1255
# define NPC_BIT30 42,1293
# define NPC_BIT31 43,1331
# define has_characteristic(45,1370
typedef uint32_t npc_characteristics_t;48,1480
class npc 50,1521
  npc_characteristics_t characteristics;52,1561
  uint32_t have_seen_pc;53,1602
  pair_t pc_last_known_position;54,1627
  std::string name,56,1661
  std::string name, description;56,1661
  std::vector<uint32_t> color;57,1694
  uint32_t abilities,58,1725
  uint32_t abilities, hitpoints,58,1725
  uint32_t abilities, hitpoints, rarity;58,1725
  dice damage;59,1766

path.h,54
# define PATH_H2,15
# define HARDNESS_PER_TURN 4,32

pc.h,121
# define PC_H2,13
class pc 10,116
  terrain_type known_terrain[known_terrain12,155
  uint8_t visible[visible13,207

utils.h,77
# define UTILS_H2,16
# define rand_under(6,147
# define rand_range(10,290
