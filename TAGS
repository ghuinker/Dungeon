
data.c,42
int returnAction(7,79
int readIn(18,266

data.h,21
# define DATA_H2,15

heap.c,1009
#undef min4,39
struct heap_node 6,51
  heap_node_t *next;next7,70
  heap_node_t *prev;prev8,91
  heap_node_t *parent;parent9,112
  heap_node_t *child;child10,135
  void *datum;datum11,157
  uint32_t degree;12,172
  uint32_t mark;13,191
#define splice_heap_node_lists(16,212
#define insert_heap_node_in_list(25,524
#define remove_heap_node_from_list(32,748
void print_heap_node(37,881
void print_heap(53,1203
void print_heap_node_list(70,1505
void heap_init(86,1704
void heap_node_delete(96,1940
void heap_delete(114,2244
heap_node_t *heap_insert(heap_insert125,2409
void *heap_peek_min(heap_peek_min145,2725
static void heap_link(150,2801
static void heap_consolidate(164,3123
void *heap_remove_min(heap_remove_min205,4056
int heap_combine(240,4590
static void heap_cut(269,5241
static void heap_cascading_cut(283,5522
int heap_decrease_key(297,5748
int heap_decrease_key_no_replace(311,5990
int32_t compare(335,6564
char *print_int(print_int340,6663
int main(349,6781

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

macros.h,611
# define MACROS_H2,17
#  define dprintf(16,213
#  define dfprintf(17,256
#  define dprintf(19,320
#  define dfprintf(20,343
# define fieldwidth(23,382
# define exit(37,1201
# define fopen(42,1441
#  define malloc(76,3348
#  define calloc(92,4430
#  define strdup(107,5435
#  define free(117,6055
# define swap(125,6303
# define memswap(131,6415
# define structdup(137,6543
# define datacmp(144,6927
# define max2(153,7400
# define min2(160,7576
# define max 167,7752
# define min 168,7770
# define max3(170,7789
# define min3(171,7830
# define frand(173,7872
# define structdup(180,7984

rlg327.c,2060
# define rand_under(18,370
# define rand_range(22,513
# define UNUSED(23,586
typedef struct corridor_path 25,617
  heap_node_t *hn;hn26,648
  uint8_t pos[pos27,667
  uint8_t from[from28,685
  int32_t cost;29,704
} corridor_path_t;30,720
typedef enum dim 32,740
  dim_x,33,759
  dim_y,34,768
  num_dims35,777
} dim_t;36,788
typedef int16_t pair_t[pair_t38,798
#define DUNGEON_X 40,833
#define DUNGEON_Y 41,867
#define MIN_ROOMS 42,901
#define MAX_ROOMS 43,934
#define ROOM_MIN_X 44,967
#define ROOM_MIN_Y 45,1000
#define ROOM_MAX_X 46,1033
#define ROOM_MAX_Y 47,1067
#define mappair(49,1101
#define mapxy(50,1158
#define hardnesspair(51,1193
#define hardnessxy(52,1260
typedef enum __attribute__ ((__packed__)) terrain_type 54,1306
  ter_debug,55,1363
  ter_wall,56,1376
  ter_wall_immutable,57,1388
  ter_floor,58,1410
  ter_floor_room,59,1423
  ter_floor_hall,60,1441
} terrain_type_t;61,1459
typedef struct room 63,1478
  pair_t position;64,1500
  pair_t size;65,1519
} room_t;66,1534
typedef struct dungeon 68,1545
  uint32_t num_rooms;69,1570
  room_t rooms[rooms70,1592
  terrain_type_t map[map71,1619
  uint8_t hardness[hardness80,2272
} dungeon_t;81,2314
static uint32_t in_room(83,2328
static uint32_t adjacent_to_room(99,2719
static uint32_t is_open_space(107,2980
static int32_t corridor_path_cmp(112,3079
static void dijkstra_corridor(116,3229
static void dijkstra_corridor_inv(215,6966
#define hardnesspair_inv(268,8288
static int connect_two_rooms(318,10959
static int create_cycle(337,11611
static int connect_rooms(379,13176
int gaussian[gaussian392,13369
typedef struct queue_node 400,13525
  int x,401,13553
  int x, y;401,13553
  struct queue_node *next;next402,13565
} queue_node_t;403,13592
static int smooth_hardness(405,13609
static int empty_dungeon(559,17783
static int place_rooms(578,18159
static int make_rooms(615,19346
int gen_dungeon(639,19894
void render_dungeon(651,20037
void delete_dungeon(679,20644
void init_dungeon(683,20683
int main(688,20740
